Notes on the localization setup for this project:

This project is localized with a slightly unusual process, because it
is necessary for Ubiquity to load the slideshow with the appropriate
translations in place without restarting and because this is
content. Also, we have to be extremely cautious about disk space.

Translations should be created through the usual convention. There
is a ./po directory in the project, containing a .pot file for each
slide. Simply create a .po file for your language inside that directory
from the .pot file. This should be done through Launchpad's Rosetta, which
is at <http://translations.launchpad.net/ubiquity-slideshow-ubuntu>. Feel
free to submit translations there and they will be imported to trunk
as necessary.


-----

Technical details:

The ./po directory is organized in a very specific way. Every file
in there is named exactly according to a slide in the ./slides
directory. For example, ./slides/welcome.html has its counterpart in
./po/welcome.html. Inside each directory is a file called template.pot,
which is generated with the command html2po -P, as well as a *.po file for
each localization which has been created for that slide, again strictly
named as LOCALE.po, for example "es.po" for the Spanish version.

To add a new slide (or, for that matter, any .html file) to the
translation infrastructure, simply create a directory in ./po as described
and Launchpad will automatically add it to Rosetta when it is committed
to trunk.

Eventually, the build script goes through each translation in the ./po
directory and runs po2html, assuming that the original .html file is of
the same name as the directory it is reading each po file from. The script
adds a translated .html file for each localized slide, which gets placed
in the built slides directory, for example ./build/slides/loc.fr/myslide.
The original slides directory remains as a fallback for everything which
has not been localized. Javascript in the slideshow itself loads the
localized slides, when asked, as opposed to its default ones.
